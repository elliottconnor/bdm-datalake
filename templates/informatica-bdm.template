{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Informatica Big Data Management QS(5014)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "PublicSubnet1ID",
                        "DBSubnetIDs",
                        "RemoteAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "EMRMasterInstanceType",
                        "EMRCoreInstanceType",
                        "InformaticaServerInstanceType"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EMR Configuration"
                    },
                    "Parameters": [
                        "EMRClusterName",
                        "EMRCoreNodes",
                        "EMRLogBucket"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon RDS Configuration"
                    },
                    "Parameters": [
                        "DBUser",
                        "DBPassword"
                    ]
                },
				{
                    "Label": {
                        "default": "Redshift Configurations"
                    },
                    "Parameters": [
                        "RedshiftSubnetA",
                        "RedshiftSubnetB",
                        "RedshiftUsername",
                        "RedshiftPassword",
                        "RedshiftDbName",
                        "RedshiftPort",
						"RedshiftNodeType",
						"RedshiftNumberOfNodes"
                    ]
                },
                {
                    "Label": {
                        "default": "Informatica Big Data Management Configuration"
                    },
                    "Parameters": [
                        "InformaticaAdminUser",
                        "InformaticaAdminPassword",
                        "InformaticaBDMKeyS3Bucket",
                        "InformaticaBDMKeyName"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "DBPassword": {
                    "default": "Informatica Database Password"
                },
                "DBSubnetIDs": {
                    "default": "Informatica Database Subnets"
                },
                "DBUser": {
                    "default": "Informatica Database Username"
                },
                "EMRClusterName": {
                    "default": "EMR Cluster Name"
                },
                "EMRCoreInstanceType": {
                    "default": "EMR Core Instance Type"
                },
                "EMRCoreNodes": {
                    "default": "EMR Core Nodes"
                },
                "EMRLogBucket": {
                    "default": "EMR Logs Bucket Name"
                },
                "EMRMasterInstanceType": {
                    "default": "EMR Master Instance Type"
                },
                "InformaticaAdminPassword": {
                    "default": "Informatica Administrator Password"
                },
                "InformaticaAdminUser": {
                    "default": "Informatica Administrator Username"
                },
                "InformaticaBDMKeyName": {
                    "default": "BDM License Key Name"
                },
                "InformaticaBDMKeyS3Bucket": {
                    "default": "BDM License Key Location"
                },
                "InformaticaServerInstanceType": {
                    "default": "Informatica Domain Instance Type"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "PublicSubnet1ID": {
                    "default": "Informatica Domain Subnet"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "RemoteAccessCIDR": {
                    "default": "IP Address Range"
                },
                "VPCID": {
                    "default": "VPC ID"
                }
            }
        }
    },
    "Parameters": {
        "DBPassword": {
            "Description": "Password for the Informatica domain and the Model repository database instance",
            "MaxLength": "18",
            "MinLength": "8",
            "NoEcho": "True",
            "Type": "String"
        },
        "DBSubnetIDs": {
            "Description": "Select two subnet IDs each from a different region in the VPC chosen above (such as: us-west-1b, us-west-1c)",
            "Type": "List<AWS::EC2::Subnet::Id>"
        },
        "DBUser": {
            "Description": "Username for the Informatica domain and the Model repository database instance",
            "MaxLength": "18",
            "MinLength": "8",
            "Type": "String"
        },
		"RedshiftSubnetA": {
            "Description": "Redshift subnet A",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "RedshiftSubnetB": {
            "Description": "Redshift subnet B",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "RedshiftUsername": {
            "Description": "RedShift Username",
            "Type": "String"
        },
        "RedshiftPassword": {
            "Description": "Password for Redshift. Must contain at least one upper case letter and one number",
            "NoEcho": true,
            "Type": "String",
			"MinLength": 8,
            "MaxLength": 28,
            "AllowedPattern": "[a-zA-Z0-9!^*\\-_+]*"
        },
        "RedshiftDbName": {
            "Description": "RedShift Database name",
            "Type": "String"
        },
        "RedshiftPort": {
            "Description": "RedShift Port",
            "Type": "String",
            "Default": "5439"
        },
		"RedshiftNodeType": {
            "AllowedValues": [
                "dc2.large",
                "dc2.8xlarge",
                "ds2.xlarge",
                "ds2.8xlarge"
            ],
            "ConstraintDescription": "must be a valid RedShift node type.",
            "Default": "dc2.large",
            "Description": "The node type to for the redshift cluster",
            "Type": "String"
        },
		"RedshiftNumberOfNodes": {
            "Default": "1",
            "Description": "The number of nodes in the redshift cluster.",
            "Type": "Number"
        },
        "EMRClusterName": {
            "Description": "Enter a name for your EMR cluster",
            "Type": "String"
        },
        "EMRCoreInstanceType": {
            "AllowedValues": [
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge"
            ],
            "Default": "m3.xlarge",
            "Description": "Enter the instance type for the EMR core nodes. Default is m3.xlarge",
            "Type": "String"
        },
        "EMRCoreNodes": {
            "Description": "Enter the number of Core Nodes. Minimum is 1",
            "MaxValue": "500",
            "MinValue": "1",
            "Type": "Number"
        },
        "EMRLogBucket": {
            "Description": "Enter the S3 bucket for the EMR logs",
            "Type": "String"
        },
        "EMRMasterInstanceType": {
            "AllowedValues": [
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge"
            ],
            "Default": "m3.xlarge",
            "Description": "Enter the instance type for the EMR master node. Default is m3.xlarge",
            "Type": "String"
        },
        "InformaticaAdminPassword": {
            "Description": "Password to access Informatica Administrator",
            "NoEcho": "True",
            "Type": "String"
        },
        "InformaticaAdminUser": {
            "Description": "Username to access Informatica Administrator",
            "Type": "String"
        },
        "InformaticaBDMKeyName": {
            "Description": "The Informatica BDM license key name. Example: BDMLicense.key or bucketsubfolder/BDMLicense.key",
            "Type": "String"
        },
        "InformaticaBDMKeyS3Bucket": {
            "Description": "Enter the S3 bucket in your account that contains your Informatica BDM key",
            "Type": "String"
        },
        "InformaticaServerInstanceType": {
            "AllowedValues": [
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge"
            ],
            "Default": "m4.large",
            "Description": "Enter the instance type for the Informatica Administrator. Default is m4.large",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the Informatica Domain",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "PublicSubnet1ID": {
            "Description": "Select a publically accessible subnet ID for the Informatica Domain",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "elliottinformaticadatalake",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Default": "informatica/bdm/latest",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Type": "String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for external access to the Informatica domain and the EMR cluster",
            "Type": "String"
        },
        "VPCID": {
            "Description": "Which VPC should this be deployed to?",
            "Type": "AWS::EC2::VPC::Id"
        }
    },
    "Rules": {
        "SubnetsInVPC": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::EachMemberIn": [
                            {
                                "Fn::ValueOfAll": [
                                    "AWS::EC2::Subnet::Id",
                                    "VpcId"
                                ]
                            },
                            {
                                "Fn::RefAll": "AWS::EC2::VPC::Id"
                            }
                        ]
                    },
                    "AssertDescription": "All subnets must in the VPC"
                }
            ]
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "INFORMATICABDMHVM": "Informatica BDM Administration Image"
            },
            "ap-northeast-1": {
                "INFORMATICABDMHVM": "ami-509b2f31"
            },
            "ap-northeast-2": {
                "INFORMATICABDMHVM": "ami-6cab7c02"
            },
            "ap-southeast-2": {
                "INFORMATICABDMHVM": "ami-d2053bb1"
            },
            "eu-west-1": {
                "INFORMATICABDMHVM": "ami-9a4815e9"
            },
            "sa-east-1": {
                "INFORMATICABDMHVM": "ami-6ada4406"
            },
            "us-east-1": {
                "INFORMATICABDMHVM": "ami-e396a1f4"
            },
            "us-west-2": {
                "INFORMATICABDMHVM": "ami-3b79d55b"
            }
        },
        "AWSInfoRegionMap": {
            "ap-northeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-northeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "sa-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            }
        }
    },
	"Conditions": {
		"IsMultiNodeCluster": {
            "Fn::Not": [
                { "Fn::Equals": [ "1", { "Ref": "RedshiftNumberOfNodes" } ] }
            ]
        }
    },
    "Resources": {
        "EMRCluster": {
            "Type": "AWS::EMR::Cluster",
            "Properties": {
                "Instances": {
                    "MasterInstanceGroup": {
                        "Configurations": [
                            {
                                "Classification": "yarn-site",
                                "ConfigurationProperties": {
                                    "yarn.scheduler.minimum-allocation-mb": "256",
                                    "yarn.nodemanager.resource.memory-mb": "17000",
                                    "yarn.nodemanager.resource.cpu-vcores": "16",
                                    "yarn.scheduler.maximum-allocation-mb": "8192",
                                    "yarn.nodemanager.vmem-check-enabled": "false"
                                }
                            }
                        ],
                        "InstanceCount": 1,
                        "InstanceType": {
                            "Ref": "EMRMasterInstanceType"
                        },
                        "Market": "ON_DEMAND",
                        "Name": "Master"
                    },
                    "CoreInstanceGroup": {
                        "InstanceCount": {
                            "Ref": "EMRCoreNodes"
                        },
                        "InstanceType": {
                            "Ref": "EMRCoreInstanceType"
                        },
                        "Market": "ON_DEMAND",
                        "Name": "Core"
                    },
                    "TerminationProtected": "false",
                    "Ec2KeyName": {
                        "Ref": "KeyPairName"
                    },
                    "Ec2SubnetId": {
                        "Ref": "PublicSubnet1ID"
                    },
                    "AdditionalMasterSecurityGroups": [
                        {
                            "Ref": "InfaDomainEMRSecurityGroup"
                        },
                        {
                            "Ref": "RemoteAccessEMRSecurityGroup"
                        }
                    ],
                    "AdditionalSlaveSecurityGroups": [
                        {
                            "Ref": "InfaDomainEMRSecurityGroup"
                        },
                        {
                            "Ref": "RemoteAccessEMRSecurityGroup"
                        }
                    ]
                },
                "Name": {
                    "Ref": "EMRClusterName"
                },
                "JobFlowRole": "EMR_EC2_DefaultRole",
                "ReleaseLabel": "emr-4.6.0",
                "ServiceRole": "EMR_DefaultRole",
                "LogUri": {
                    "Fn::Join": [
                        "",
                        [
                            "s3://",
                            {
                                "Ref": "EMRLogBucket"
                            }
                        ]
                    ]
                },
                "Applications": [
                    {
                        "Name": "Hive"
                    }
                ],
                "BootstrapActions": [
                    {
                        "Name": "NodeInstall",
                        "ScriptBootstrapAction": {
                            "Path": {
                                "Fn::Join": [
                                    "/",
                                    [
                                        "s3:/",
                                        {
                                            "Ref": "QSS3BucketName"
                                        },
                                        {
                                            "Ref": "QSS3KeyPrefix"
                                        },
                                        "scripts/bootstrap_rpm_installer.sh"
                                    ]
                                ]
                            }
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "IsTest",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "EMR-",
                                    {
                                        "Ref": "EMRClusterName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "InfaDomainEMRSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable Informatica Domain Access in EMR",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8020",
                        "ToPort": "8020",
                        "SourceSecurityGroupId": {
                            "Ref": "InfaDomainSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8032",
                        "ToPort": "8032",
                        "SourceSecurityGroupId": {
                            "Ref": "InfaDomainSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9083",
                        "ToPort": "9083",
                        "SourceSecurityGroupId": {
                            "Ref": "InfaDomainSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "10000",
                        "ToPort": "10000",
                        "SourceSecurityGroupId": {
                            "Ref": "InfaDomainSecurityGroup"
                        }
                    }
                ]
            }
        },
        "RemoteAccessEMRSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable Informatica Domain Access in EMR",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9083",
                        "ToPort": "9083",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "10000",
                        "ToPort": "10000",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    }
                ]
            }
        },
        "InfaDBSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "Subnets available for the RDS DB Instance",
                "SubnetIds": {
                    "Ref": "DBSubnetIDs"
                }
            }
        },
        "InfaDB": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "DBInstanceIdentifier": {
                    "Fn::Join": [
                        "",
                        [
                            "infadb-",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                },
                "AllocatedStorage": "200",
                "DBInstanceClass": "db.m4.large",
                "DBSubnetGroupName": {
                    "Ref": "InfaDBSubnetGroup"
                },
                "VPCSecurityGroups": [
                    {
                        "Ref": "InfaDBSecurityGroup"
                    }
                ],
                "Engine": "sqlserver-se",
                "EngineVersion": "12.00.5000.0.v1",
                "LicenseModel": "license-included",
                "MasterUsername": {
                    "Ref": "DBUser"
                },
                "MasterUserPassword": {
                    "Ref": "DBPassword"
                },
                "MultiAZ": true
            }
        },
		"RedshiftSubnetGroup": {
            "Type": "AWS::Redshift::ClusterSubnetGroup",
            "Properties": {
                "Description": "RedShift Subnet linked to both private database subnets",
                "SubnetIds": [
                    { "Ref": "RedshiftSubnetA" },
                    { "Ref": "RedshiftSubnetB" }
                ]
            }
        },
        "RedshiftInstance": {
            "Type": "AWS::Redshift::Cluster",
            "DependsOn": [ "RedshiftSubnetGroup" ],
            "Properties": {
                "ClusterSubnetGroupName": { "Ref": "RedshiftSubnetGroup" },
                "ClusterType": {
                    "Fn::If": [
                        "IsMultiNodeCluster",
                        "multi-node",
                        "single-node"
                    ]
                },
                "NodeType": { "Ref": "RedshiftNodeType" },
				"NumberOfNodes": {
                    "Fn::If": [
                        "IsMultiNodeCluster",
                        {
                            "Ref": "RedshiftNumberOfNodes"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "VpcSecurityGroupIds": [ { "Ref": "InfaDBSecurityGroup" } ],
                "DBName": { "Ref": "RedshiftDbName" },
                "MasterUsername": { "Ref": "RedshiftUsername" },
                "MasterUserPassword": { "Ref": "RedshiftPassword" },
                "Port": { "Ref": "RedshiftPort" },
                "PubliclyAccessible": false
            }
        },
        "InfaDBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Informatica domain access to RDS DB",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1433",
                        "ToPort": "1433",
                        "SourceSecurityGroupId": {
                            "Ref": "InfaDomainSecurityGroup"
                        }
                    }
                ]
            }
        },
        "InfaDomainSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable Informatica Domain Server Access",
                "VpcId": {
                    "Ref": "VPCID"
                }
            }
        },
        "RemoteAccessInfaDomainSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable Informatica Domain Server Access",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "6005",
                        "ToPort": "6006",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "6008",
                        "ToPort": "6008",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "6014",
                        "ToPort": "6114",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8084",
                        "ToPort": "8085",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8105",
                        "ToPort": "8105",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8095",
                        "ToPort": "8095",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "10250",
                        "ToPort": "10250",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "7333",
                        "ToPort": "7333",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    }
                ]
            }
        },
        "InstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/"
            }
        },
        "RolePolicies": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "S3Download",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "s3:GetObject"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "InformaticaBDMKeyS3Bucket"
                                            },
                                            "/",
                                            {
                                                "Ref": "InformaticaBDMKeyName"
                                            }
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "InstanceRole"
                    }
                ]
            }
        },
        "InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "InstanceRole"
                    }
                ]
            }
        },
        "AdministrationServerEIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "InstanceId": {
                    "Ref": "AdministrationServer"
                }
            }
        },
        "AdministrationServer": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "InstanceRole"
                        },
                        "buckets": [
                            {
                                "Ref": "InformaticaBDMKeyS3Bucket"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "InstallAndRun": [
                            "Install",
                            "Configure"
                        ]
                    },
                    "Install": {
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "\n",
                                            "interval=1\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "ec2-user",
                                "group": "ec2-user"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.AdministrationServer.Metadata.AWS::CloudFormation::Init\n",
                                            "action=/opt/aws/bin/cfn-init -s ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " -r AdministrationServer ",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n",
                                            "runas=root\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "ec2-user",
                                "group": "ec2-user"
                            },
                            "/home/ec2-user/Mercury_Setup/replaceValues.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/bin/bash\n",
                                            "set -x\n",
                                            "THISHOST=$(hostname -f)\n",
                                            "sed -i -e ",
                                            {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "\"s/DomainHostValue/$THISHOST/g\"",
                                                        " /home/ec2-user/Mercury_Setup/config_template.xml\n"
                                                    ]
                                                ]
                                            },
                                            "sed -i -e 's/adminusername/",
                                            {
                                                "Ref": "InformaticaAdminUser"
                                            },
                                            "/g' /home/ec2-user/Mercury_Setup/config_template.xml\n",
                                            "sed -i -e 's/adminpassword/",
                                            {
                                                "Ref": "InformaticaAdminPassword"
                                            },
                                            "/g' /home/ec2-user/Mercury_Setup/config_template.xml\n",
                                            "sed -i -e 's/dbtypevalue/MSSQLServer/g' /home/ec2-user/Mercury_Setup/config_template.xml\n",
                                            "sed -i -e 's/dbloginvalue/",
                                            {
                                                "Ref": "DBUser"
                                            },
                                            "/g' /home/ec2-user/Mercury_Setup/config_template.xml\n",
                                            "sed -i -e 's/dbpasswordvalue/",
                                            {
                                                "Ref": "DBPassword"
                                            },
                                            "/g' /home/ec2-user/Mercury_Setup/config_template.xml\n",
                                            "sed -i -e 's/dbhostname/",
                                            {
                                                "Fn::GetAtt": [
                                                    "InfaDB",
                                                    "Endpoint.Address"
                                                ]
                                            },
                                            "/g' /home/ec2-user/Mercury_Setup/config_template.xml\n",
                                            "sed -i -e 's/dbportvalue/1433/g' /home/ec2-user/Mercury_Setup/config_template.xml\n",
                                            "sed -i -e 's/dbservicenamevalue/infadb/g' /home/ec2-user/Mercury_Setup/config_template.xml\n",
                                            "sed -i -e 's/mrsservicename/infamrsdb/g' /home/ec2-user/Mercury_Setup/config_template.xml\n",
                                            "sed -i -e 's/masternode/",
                                            {
                                                "Fn::GetAtt": [
                                                    "EMRCluster",
                                                    "MasterPublicDNS"
                                                ]
                                            },
                                            "/g' /home/ec2-user/Mercury_Setup/config_template.xml\n"
                                        ]
                                    ]
                                },
                                "mode": "000700",
                                "owner": "ec2-user",
                                "group": "ec2-user"
                            },
                            "/home/ec2-user/Mercury_Setup/yarninstall.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "#!/bin/bash\n",
                                            "set -x\n",
                                            "sed -i -e ",
                                            {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "\"s/HOSTNAME/",
                                                        {
                                                            "Fn::GetAtt": [
                                                                "EMRCluster",
                                                                "MasterPublicDNS"
                                                            ]
                                                        },
                                                        "/g\"",
                                                        " /opt/informatica/services/shared/hadoop/amazon_emr4.6.0/conf/yarn-site.xml\n"
                                                    ]
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "mode": "000700",
                                "owner": "ec2-user",
                                "group": "ec2-user"
                            },
                            "/mnt1/BDMLicense.key": {
                                "source": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "https://",
                                            {
                                                "Ref": "InformaticaBDMKeyS3Bucket"
                                            },
                                            ".s3.amazonaws.com/",
                                            {
                                                "Ref": "InformaticaBDMKeyName"
                                            }
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "ec2-user",
                                "group": "ec2-user"
                            }
                        }
                    },
                    "Configure": {
                        "commands": {
                            "01_ReplaceValues": {
                                "command": "sudo /home/ec2-user/Mercury_Setup/replaceValues.sh"
                            },
                            "02_DatabaseCreation": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "sudo java -cp /home/ec2-user/mssqlutil/MSSQLUtility.jar:/home/ec2-user/mssqlutil/com.informatica.datadirect-dwsqlserver-5.1.4_B.jar MSSQLUtility jdbc:informatica:sqlserver://",
                                            {
                                                "Fn::GetAtt": [
                                                    "InfaDB",
                                                    "Endpoint.Address"
                                                ]
                                            },
                                            ":1433 ",
                                            {
                                                "Ref": "DBUser"
                                            },
                                            " ",
                                            {
                                                "Ref": "DBPassword"
                                            },
                                            " infadb ",
                                            "infamrsdb"
                                        ]
                                    ]
                                }
                            },
                            "03_MercurySetup": {
                                "command": "sudo java -jar /home/ec2-user/Mercury_Setup/mercury_setup.jar -cf /home/ec2-user/Mercury_Setup/config_template.xml -s -uei"
                            },
                            "04_YarnSetup": {
                                "command": "sudo /home/ec2-user/Mercury_Setup/yarninstall.sh"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "INFORMATICABDMHVM"
                    ]
                },
                "InstanceType": {
                    "Ref": "InformaticaServerInstanceType"
                },
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "InstanceInitiatedShutdownBehavior": "stop",
                "SecurityGroupIds": [
                    {
                        "Ref": "InfaDomainSecurityGroup"
                    },
                    {
                        "Ref": "RemoteAccessInfaDomainSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "PublicSubnet1ID"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "InformaticaDomain-",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -x\n",
                                "sudo yum update -y aws-cfn-bootstrap\n",
                                "# Install the files and packages from the metadata\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource AdministrationServer ",
                                "         --configsets InstallAndRun ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "# Signal the status from cfn-init\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                " --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource AdministrationServer ",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT3H"
                }
            }
        },
		"SourceBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "AccessControl": "Private"
            }
        },
        "TargetBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "AccessControl": "Private"
            }
        }
    },
    "Outputs": {
        "InstanceID": {
            "Description": "Informatica Domain Host Name",
            "Value": {
                "Ref": "AdministrationServer"
            }
        },
        "InformaticaAdminConsoleURL": {
            "Description": "Informatica Administrator Console",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "AdministrationServer",
                                "PublicDnsName"
                            ]
                        },
                        ":6008"
                    ]
                ]
            }
        },
        "EMRMasterNodeHadoopURL": {
            "Description": "EMR Resource Manager",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "EMRCluster",
                                "MasterPublicDNS"
                            ]
                        },
                        ":8088"
                    ]
                ]
            }
        },
        "InformaticaAdminConsoleServerLogs": {
            "Description": "Informatica Domain Installation Log Location",
            "Value": "/installation.log"
        },
        "CloudFormationLogs": {
            "Description": "Cloud Formation Installation Log Location",
            "Value": "/var/log/cfn-init-cmd.log"
        },
        "InformaticaHadoopInstallLogs": {
            "Description": "Master Node Hadoop Installation Log Location",
            "Value": "/mnt/var/log/bootstrap-actions"
        },
        "InformaticaBDMDeveloperClient": {
            "Description": "Informatica Developer Tool Download Location",
            "Value": "https://s3-us-west-2.amazonaws.com/bdm-awsmarketplace/1010_Client_Installer_winem-64t.zip"
        },
		"RedshiftJdbcUrl": {
            "Value": { "Fn::Sub": "jdbc:redshift://${RedshiftInstance.Endpoint.Address}:${RedshiftInstance.Endpoint.Port}/${RedshiftDbName}" },
            "Export": { "Name": { "Fn::Sub": "${AWS::StackName}:RedshiftJdbcUrl" } }
        },
		"SourceBucket": {
            "Value": { "Ref": "SourceBucket" },
            "Export": { "Name": { "Fn::Sub": "${AWS::StackName}:SourceBucket" } }
        },
        "TargetBucket": {
            "Value": { "Ref": "TargetBucket" },
            "Export": { "Name": { "Fn::Sub": "${AWS::StackName}:TargetBucket" } }
        }
    }
}
